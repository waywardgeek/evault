steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/evault-server:$BUILD_ID', './server']
    dir: '.'

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/evault-server:$BUILD_ID']

  # Deploy to Cloud Run (without database for now)
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - 'run'
    - 'deploy'
    - 'evault-server'
    - '--image'
    - 'gcr.io/$PROJECT_ID/evault-server:$BUILD_ID'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--port'
    - '8080'
    - '--memory'
    - '512Mi'
    - '--timeout'
    - '300s'
    - '--set-env-vars'
    - 'GIN_MODE=release'
    - '--set-env-vars'
    - 'ENV=production'
    - '--set-env-vars'
    - 'DB_HOST=localhost'
    - '--set-env-vars'
    - 'DB_USER=temp'
    - '--set-env-vars'
    - 'DB_PASSWORD=temp'
    - '--set-env-vars'
    - 'DB_NAME=temp'
    - '--set-env-vars'
    - 'DB_SSLMODE=disable'
    - '--set-env-vars'
    - 'JWT_SECRET=production-jwt-secret-change-me'
    - '--set-env-vars'
    - 'SKIP_DB_CONNECTION=true'

# Store the built image in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/evault-server:$BUILD_ID'

options:
  logging: CLOUD_LOGGING_ONLY 